{
  "x-generator": "NSwag v13.10.7.0 (NJsonSchema v10.3.9.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Laserfiche OAuth 2.0 Authorization Server API",
    "description": "An ASP.NET Core web API for Laserfiche OAuth 2.0 Authorization Server<p><strong>Build# : </strong>4f7a879120e1a11fb1d3772c18859787d28d355b_.20220404.1</p>",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://signin.laserfiche.com/oauth"
    }
  ],
  "paths": {
    "/Token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Request for an access token.\n- Use authCode to get an access token for the authorization code flow. This uses grant_type, code and redirect_uri. Furthermore, client id and client secret are taken from the Basic auth header for web applications. For SPAs, the client id should be in the request body. After getting the authorization code, the application could use it to exchange for an access token by calling this endpoint. Authorization code has a short lifetime for around 10 minutes. If it's not used within its lifetime, it will be expired and the application should start from authorization again.\n- Use refreshToken to get a new access token for the authorization code flow. This uses grant_type and refresh_token. Furthermore, client id and client secret are taken from the Basic auth header for web applications. For SPAs, the client id should be in the request body.\n- Use Bearer header to generate access token for the client credential flow. This uses grant_type and bearer auth header.",
        "operationId": "Token_GetAccessToken",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "title": "GetAccessTokenRequest",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "grant_type"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "The Client ID returned when the application was registered."
                  },
                  "grant_type": {
                    "type": "string",
                    "description": "The value MUST be either of \"authorization_code\", \"refresh_token\", or \"client_credentials\".",
                    "minLength": 1
                  },
                  "code": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "The authorization code returned by the authorization server in the first step of the authorization code flow."
                  },
                  "redirect_uri": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "This should be equal to the Redirect URI sent to /authorize endpoint in the first step of the authorization code flow."
                  },
                  "scope": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "The scope of the requested access token."
                  },
                  "refresh_token": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "The refresh token, which can be used to obtain new access tokens."
                  },
                  "code_verifier": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "A code verifier, used to verify the code_challenge sent to /authorize endpoint in the first step of the authorization code flow."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetAccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Basic Authorization": {
        "type": "http",
        "in": "header",
        "scheme": "basic"
      },
      "Authorization": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Basic Authorization": []
    },
    {
      "Authorization": []
    }
  ]
}