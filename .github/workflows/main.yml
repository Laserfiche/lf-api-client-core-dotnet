name: lf-api-client-core-dotnet-CI

on:
  push:
    branches: [ '\d+.x' ]
  pull_request:
    branches: [ '\d+.x' ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VERSION_PREFIX: "1.3.0"

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [ build-n-test ] # wait for build to finish
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get install doxygen
        sudo apt-get install graphviz

    - name: Check dependency versions
      run: |
        doxygen --version
        dot -V

    - name: Create temporary directory
      run: mkdir -p ./docs_temp/${{ github.ref_name }}

    - name: Generate doxygen config
      run: doxygen -g doxygen.conf

    - name: Rewrite doxygen config
      run: |
        sed -i 's|"My Project"|${{ github.event.repository.name }}|i' doxygen.conf
        sed -i 's|PROJECT_BRIEF          =|PROJECT_BRIEF          = ".NET implementation of various OAuth 2.0 flows for secure and easy access to Laserfiche APIs."|i' doxygen.conf
        sed -i 's|PROJECT_LOGO           =|PROJECT_LOGO           = logo.png|i' doxygen.conf
        sed -i 's|EXCLUDE                =|EXCLUDE                = ./tests|i' doxygen.conf
        sed -i "s|OUTPUT_DIRECTORY       =|OUTPUT_DIRECTORY       = ./docs_temp/${{ github.ref_name }}/|i" doxygen.conf
        sed -i 's|RECURSIVE              = NO|RECURSIVE              = YES|i' doxygen.conf
        sed -i 's|GENERATE_LATEX         = YES|GENERATE_LATEX         = NO|i' doxygen.conf
        sed -i 's|EXTRACT_STATIC         = NO|EXTRACT_STATIC         = YES|i' doxygen.conf
        sed -i 's|USE_MDFILE_AS_MAINPAGE =|USE_MDFILE_AS_MAINPAGE = README.md|i' doxygen.conf
        sed -i 's|MACRO_EXPANSION        = NO|MACRO_EXPANSION        = YES|i' doxygen.conf
        sed -i 's|EXPAND_ONLY_PREDEF     = NO|EXPAND_ONLY_PREDEF     = YES|i' doxygen.conf
        sed -i 's|PREDEFINED             =|PREDEFINED             = protected=private|i' doxygen.conf
        sed -i 's|SORT_BRIEF_DOCS        = NO|SORT_BRIEF_DOCS        = YES|i' doxygen.conf

    - name: Dump doxygen.conf to check rewrite
      run: head -n 200 doxygen.conf

    - name: Generate doxygen docs
      run: doxygen doxygen.conf

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: documentation-artifact
        path: ${{ github.workspace }}/docs_temp/${{ github.ref_name }}/html

    - name: Delete temporary directory
      run: rm -r ./docs_temp

    - name: Delete doxygen config
      run: rm -f doxygen.conf


  publish-documentation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: documentation
    if: ${{ github.run_attempt != 1 }}
    needs: [ build-documentation ] # wait for build to finish
    steps:
    - name: Create temporary directory
      run: mkdir -p ./docs_temp/${{ github.ref_name }}/html/

    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: documentation-artifact
        path: ${{ github.workspace }}/docs_temp/${{ github.ref_name }}/html/


