# A workflow that builds and packages the project and push newly built package to nuget.org.

name: Publish to Nuget

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-n-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Packaging
      run: dotnet pack --configuration release
    - name: Install doxygen
      run: sudo apt-get install doxygen
    - name: Check doxygen version
      run: doxygen --version
    - name: Create temporary directory
      run: mkdir -p ./docs_temp/${GITHUB_REF##*/}
    - name: Generate doxygen config
      run: doxygen -g doxygen.conf
    - name: Rewrite doxygen config
      run: sed -i 's|"My Project"|lf-oauth-api-client-dotnet|i' doxygen.conf
    - name: Rewrite doxygen config
      run: |
        sed -i 's|PROJECT_BRIEF          =|PROJECT_BRIEF          = ".NET implementation of various OAuth 2.0 flows for secure and easy access to Laserfiche APIs."|i' doxygen.conf
        sed -i 's|PROJECT_LOGO           =|PROJECT_LOGO           = logo.png|i' doxygen.conf
        sed -i "s|OUTPUT_DIRECTORY       =|OUTPUT_DIRECTORY       = ./docs_temp/${GITHUB_REF##*/}/|i" doxygen.conf
        sed -i 's|RECURSIVE              = NO|RECURSIVE              = YES|i' doxygen.conf
        sed -i 's|GENERATE_LATEX         = YES|GENERATE_LATEX         = NO|i' doxygen.conf
    - name: Check rewrite
      run: head -n 200 doxygen.conf
    - name: Generate doxygen docs
      run: doxygen doxygen.conf
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2 # Use your bucket region here
    - name: Upload docs to S3 bucket
      run: aws s3 sync ./docs_temp/${GITHUB_REF##*/}/ s3://apiserver-publish-client-library-docs/${GITHUB_REPOSITORY##*/}/docs/${GITHUB_REF##*/} --delete
    - name: delete temporary directory
      run: rm -r ./docs_temp
      
  
