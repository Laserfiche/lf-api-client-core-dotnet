{
  "x-generator": "NSwag v13.14.8.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Laserfiche Repository API",
    "description": "Welcome to the Laserfiche API Swagger Playground. You can try out any of our API calls against your live Laserfiche Cloud account. Visit the developer center for more details: <a href=\"https://developer.laserfiche.com\">https://developer.laserfiche.com</a><p><strong>Build# : </strong>develop_localbuild</p>",
    "version": "1-alpha"
  },
  "servers": [
    {
      "url": "http://localhost:11211"
    },
    {
      "url": "https://localhost:11211"
    }
  ],
  "paths": {
	"/v1-alpha/Repositories/{repoId}/AccessTokens/Create": {
      "post": {
        "tags": [
          "AccessTokens"
        ],
        "description": "- Creates an access token for use with the Laserfiche API.\n- Provides credentials and uses the access token returned with subsequent API calls as a means of authorization.\n- Adding createCookie=true as a query parameter results a response that includes a Set-Cookie header containing an authToken value. The default value for createCookie is false.",
        "operationId": "CreateAccessToken",
        "parameters": [
          {
            "name": "repoId",
            "in": "path",
            "required": true,
            "description": "The requested repository ID.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "createCookie",
            "in": "query",
            "description": "An optional query parameter used to indicate whether a Set-Cookie header containing\n            the authToken is returned in the response.",
            "schema": {
              "type": "boolean"
            },
            "x-position": 3
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "The Laserfiche Cloud account ID to use when using username and password to create a session connection.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The username and password used to create the session connection.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionRequest"
              },
              "examples": {
                "1": {
                  "summary": "Authenticate using username and password",
                  "description": "For ACS authentication, username and password can be placed in the request body with customerId in query parameter and an auth token will be returned in the response. An optional application name can also be set.",
                  "value": {
                    "username": "username value",
                    "password": "password value",
                    "applicationName": ""
                  }
                }
              }
            }
          },
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Create an authorizationToken successfuly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionKeyInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIServerException"
                }
              }
            }
          },
          "401": {
            "description": "Access token is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIServerException"
                }
              }
            }
          },
          "403": {
            "description": "Access denied for the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIServerException"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit is reached.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIServerException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
	  "APIServerException": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "The id of the operation that threw the exception.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "The explaination of the exception that occurred.",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "description": "The code associated with the exception.",
            "format": "int32",
            "nullable": true
          },
          "errorClass": {
            "type": "string",
            "description": "The class of exceptions this belongs to.",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "description": "The HTTP status code returned.",
            "format": "int32",
            "nullable": true
          },
          "errorSource": {
            "type": "string",
            "description": "The source of where the exception occurred.",
            "nullable": true
          }
        }
      },
	  "SessionKeyInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authToken": {
            "type": "string",
            "description": "The auth token that can be used to authenticate with the repository apis.",
            "nullable": true
          },
          "expireTime": {
            "type": "string",
            "description": "The auth token expire time.",
            "format": "date-time"
          }
        }
      },
      "CreateConnectionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sessionKey": {
            "type": "string",
            "description": "Authenticate using a session key.",
            "nullable": true
          },
          "samlToken": {
            "type": "string",
            "description": "Authenticate using a saml token.",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Authenticate username.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Authenticate password.",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "description": "An optional application name that will be used for audit trail.",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "description": "Authenticate organization.",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Type your token into the textbox.",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}